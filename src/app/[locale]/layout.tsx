// i18n (internalization)
import { NextIntlClientProvider, hasLocale } from 'next-intl'
import { notFound } from 'next/navigation'
import { routing } from '@/i18n/routing'

import type { Metadata } from 'next'
import { Manrope, Geist_Mono } from 'next/font/google'
import '../globals.scss'

const manrope = Manrope({
    variable: '--font-manrope',
    subsets: ['latin'],
})

const geistMono = Geist_Mono({
    variable: '--font-geist-mono',
    subsets: ['latin'],
})

export const metadata: Metadata = {
    title: 'Trois Cent | Branding, sites web et applications',
    description: 'Generated by create next app',
}

export default async function LocaleLayout({
    children,
    params,
}: Readonly<{
    children: React.ReactNode
    params: Promise<{ locale: string }>
}>) {
    const { locale } = await params
    if (!hasLocale(routing.locales, locale)) {
        notFound()
    }

    return (
        <html lang={locale} className={`${manrope.className} ${geistMono.className}`}>
            <body className={`antialiased`}>
                <NextIntlClientProvider>{children}</NextIntlClientProvider>
            </body>
        </html>
    )
}
